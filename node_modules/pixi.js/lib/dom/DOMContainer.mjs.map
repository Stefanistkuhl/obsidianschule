{"version":3,"file":"DOMContainer.mjs","sources":["../../src/dom/DOMContainer.ts"],"sourcesContent":["import { Point } from '../maths/point/Point';\nimport { ViewContainer, type ViewContainerOptions } from '../scene/view/ViewContainer';\n\nimport type { PointData } from '../maths/point/PointData';\n\n/**\n * Options for the {@link scene.DOMContainer} constructor.\n * @memberof scene\n */\nexport interface DOMContainerOptions extends ViewContainerOptions\n{\n    /** The DOM element to use for the container. */\n    element?: HTMLElement;\n    /** The anchor point of the container. */\n    anchor?: PointData | number;\n}\n\n/**\n * The DOMContainer object is used to render DOM elements within the PixiJS scene graph.\n * It allows you to integrate HTML elements into your PixiJS application.\n *\n * DOMContainer is especially useful for rendering standard DOM elements\n * that handle user input, such as `<input>` or `<textarea>`.\n * This is often simpler and more flexible than trying to implement text input\n * directly in PixiJS. For instance, if you need text fields or text areas,\n * you can embed them through this container for native browser text handling.\n *\n * --------- EXPERIMENTAL ---------\n *\n * This is a new API, things may change and it may not work as expected.\n * We want to hear your feedback as we go!\n *\n * --------------------------------\n * @example\n * ```js\n * import { DOMContainer } from 'pixi.js';\n *\n * const element = document.createElement('div');\n * element.innerHTML = 'Hello World!';\n *\n * const domContainer = new DOMContainer({ element });\n * ```\n * @memberof scene\n * @extends scene.ViewContainer\n */\nexport class DOMContainer extends ViewContainer\n{\n    /** @private */\n    public override readonly renderPipeId: string = 'dom';\n\n    /** @private */\n    public batched = false;\n    /**\n     * The anchor point of the container.\n     * @private\n     */\n    public readonly _anchor: Point;\n\n    /** The DOM element that this container is using. */\n    private _element: HTMLElement;\n\n    /**\n     * @param options - The options for creating the DOM container.\n     */\n    constructor(options: DOMContainerOptions = {})\n    {\n        const { element, anchor, ...rest } = options;\n\n        super({\n            label: 'DOMContainer',\n            ...rest\n        });\n\n        this._anchor = new Point(0, 0);\n\n        if (anchor)\n        {\n            this.anchor = anchor;\n        }\n\n        this.element = options.element || document.createElement('div');\n    }\n\n    /**\n     * The anchor sets the origin point of the container.\n     * The default is `(0,0)`, this means the container's origin is the top left.\n     *\n     * Setting the anchor to `(0.5,0.5)` means the container's origin is centered.\n     * Setting the anchor to `(1,1)` would mean the container's origin point will be the bottom right corner.\n     *\n     * If you pass only single parameter, it will set both x and y to the same value as shown in the example below.\n     */\n    get anchor(): Point\n    {\n        return this._anchor;\n    }\n\n    set anchor(value: PointData | number)\n    {\n        typeof value === 'number' ? this._anchor.set(value) : this._anchor.copyFrom(value);\n    }\n\n    set element(value: HTMLElement)\n    {\n        if (this._element === value) return;\n\n        this._element = value;\n        this.onViewUpdate();\n    }\n\n    /** The DOM element that this container is using. */\n    get element(): HTMLElement\n    {\n        return this._element;\n    }\n\n    /** @private */\n    protected updateBounds()\n    {\n        const bounds = this._bounds;\n        const element = this._element;\n\n        if (!element)\n        {\n            bounds.minX = 0;\n            bounds.minY = 0;\n            bounds.maxX = 0;\n            bounds.maxY = 0;\n\n            return;\n        }\n\n        const { offsetWidth, offsetHeight } = element;\n\n        bounds.minX = 0;\n        bounds.maxX = offsetWidth;\n        bounds.minY = 0;\n        bounds.maxY = offsetHeight;\n    }\n\n    /**\n     * Destroys this DOM container.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     */\n    public override destroy(options: boolean = false)\n    {\n        super.destroy(options);\n\n        this._element?.parentNode?.removeChild(this._element);\n        this._element = null;\n        (this._anchor as null) = null;\n    }\n}\n"],"names":[],"mappings":";;;;AA6CO,MAAM,qBAAqB,aAClC,CAAA;AAAA;AAAA;AAAA;AAAA,EAkBI,WAAA,CAAY,OAA+B,GAAA,EAC3C,EAAA;AACI,IAAA,MAAM,EAAE,OAAA,EAAS,MAAQ,EAAA,GAAG,MAAS,GAAA,OAAA,CAAA;AAErC,IAAM,KAAA,CAAA;AAAA,MACF,KAAO,EAAA,cAAA;AAAA,MACP,GAAG,IAAA;AAAA,KACN,CAAA,CAAA;AAvBL;AAAA,IAAA,IAAA,CAAyB,YAAuB,GAAA,KAAA,CAAA;AAGhD;AAAA,IAAA,IAAA,CAAO,OAAU,GAAA,KAAA,CAAA;AAsBb,IAAA,IAAA,CAAK,OAAU,GAAA,IAAI,KAAM,CAAA,CAAA,EAAG,CAAC,CAAA,CAAA;AAE7B,IAAA,IAAI,MACJ,EAAA;AACI,MAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AAAA,KAClB;AAEA,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAQ,OAAW,IAAA,QAAA,CAAS,cAAc,KAAK,CAAA,CAAA;AAAA,GAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GAChB;AAAA,EAEA,IAAI,OAAO,KACX,EAAA;AACI,IAAO,OAAA,KAAA,KAAU,QAAW,GAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAI,KAAK,CAAI,GAAA,IAAA,CAAK,OAAQ,CAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,GACrF;AAAA,EAEA,IAAI,QAAQ,KACZ,EAAA;AACI,IAAA,IAAI,KAAK,QAAa,KAAA,KAAA;AAAO,MAAA,OAAA;AAE7B,IAAA,IAAA,CAAK,QAAW,GAAA,KAAA,CAAA;AAChB,IAAA,IAAA,CAAK,YAAa,EAAA,CAAA;AAAA,GACtB;AAAA;AAAA,EAGA,IAAI,OACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,QAAA,CAAA;AAAA,GAChB;AAAA;AAAA,EAGU,YACV,GAAA;AACI,IAAA,MAAM,SAAS,IAAK,CAAA,OAAA,CAAA;AACpB,IAAA,MAAM,UAAU,IAAK,CAAA,QAAA,CAAA;AAErB,IAAA,IAAI,CAAC,OACL,EAAA;AACI,MAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AACd,MAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AACd,MAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AACd,MAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AAEd,MAAA,OAAA;AAAA,KACJ;AAEA,IAAM,MAAA,EAAE,WAAa,EAAA,YAAA,EAAiB,GAAA,OAAA,CAAA;AAEtC,IAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AACd,IAAA,MAAA,CAAO,IAAO,GAAA,WAAA,CAAA;AACd,IAAA,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;AACd,IAAA,MAAA,CAAO,IAAO,GAAA,YAAA,CAAA;AAAA,GAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOgB,OAAA,CAAQ,UAAmB,KAC3C,EAAA;AACI,IAAA,KAAA,CAAM,QAAQ,OAAO,CAAA,CAAA;AAErB,IAAA,IAAA,CAAK,QAAU,EAAA,UAAA,EAAY,WAAY,CAAA,IAAA,CAAK,QAAQ,CAAA,CAAA;AACpD,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;AAChB,IAAC,KAAK,OAAmB,GAAA,IAAA,CAAA;AAAA,GAC7B;AACJ;;;;"}